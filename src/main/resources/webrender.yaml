# topology definition

# name to be used when submitting
name: "webrender"

# topology configuration
config:
  topology.workers: 2
  topology.message.timeout.secs: 300
  topology.max.spout.pending: 2
  topology.debug: false
  topology.kryo.register: 
  - com.digitalpebble.storm.crawler.Metadata

  rabbitmq.queueName: ""
  rabbitmq.requeueOnFail: true
  rabbitmq.prefetchCount: 2

  rabbitmq.exchangeName: "teacup"
  rabbitmq.routingKey: ""
  rabbitmq.contentType: "application/json"
  rabbitmq.contentEncoding: "UTF-8"
  rabbitmq.persistent: true

components:
  - id: "messageScheme"
    className: "uk.bl.wa.teacup.schemes.CrawlURLScheme"

  - id: "renderQueueDeclarator"
    className: "uk.bl.wa.teacup.queues.UrlQueueDeclarator"
    constructorArgs:
     - "renderer"
     - "to_render"

  - id: "urlQueueDeclarator"
    className: "uk.bl.wa.teacup.queues.UrlQueueDeclarator"
    constructorArgs:
     - "teacup"
     - "urls"

  - id: "urlMessage"
    className: "uk.bl.wa.teacup.queues.UrlTupleToMessage"


# spout definitions
spouts:
  - id: "spout"
    className: "io.latent.storm.rabbitmq.RabbitMQSpout"
    constructorArgs:
      - ref: "messageScheme"
      - ref: "renderQueueDeclarator"
    parallelism: 1

# bolt definitions
bolts:
  - id: "renderer"
    className: "uk.bl.wa.teacup.bolt.PhantomJSRenderHarBolt"
    parallelism: 1
    
  - id: "renderer-py"
    className: "org.apache.storm.flux.wrappers.bolts.FluxShellBolt"
    constructorArgs:
      # command line
      - ["python", "webrenderer.py"]
      # output fields
      - ["har"]
    parallelism: 1
    
  - id: "url-sink"
    className: "io.latent.storm.rabbitmq.RabbitMQBolt"
    constructorArgs:
      - ref: "urlMessage"
      - ref: "urlQueueDeclarator"
    parallelism: 1

# stream definitions
streams:
  - name: "spout --> renderer"
    from: "spout"
    to:   "renderer"
    grouping:
      type: LOCAL_OR_SHUFFLE

  - name: "render --> queue"
    from: "renderer"
    to:   "url-sink"
    grouping:
      type: LOCAL_OR_SHUFFLE
      streamId: "urls"


