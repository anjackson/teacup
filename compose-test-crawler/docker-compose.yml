# UKWA Heritrix
ukwa-heritrix:
  build: ../ukwa-heritrix
  volumes:
    - ./jobs:/jobs
    - ../../heritrix3:/heritrix3
    - ../../bl-heritrix-modules:/bl-heritrix-modules
  ports:
    - "8443:8443"
  environment:
    - "MONITRIX_ENABLED=1"
  links:
    - clamd
    - rabbitmq
    - monitrix
  volumes_from:
    - dvc:rw

# Data Volume Container
# - This is the recommended way to share a data volume between containers.
dvc:
  image: busybox
  volumes:
    - ./output:/heritrix/output
#    - ./state:/heritrix/state

# Clamd virus scanning Service
clamd:
  build: ../clamd
  ports:
    - "3310:3310"

# RabbitMQ
rabbitmq:
  image: rabbitmq:3.5-management
  ports:
    - "15672:15672"  # management port (guest:guest)
    - "5672:5672"   # amqp port
    - "25672:25672" # cluster port
  log_driver: none

# PhantomJS web page rendering service
webrender:
  build: ../webrender-phantomjs
  ports:
    - "8000:8000"

# HAR Daemon that connects Heritrix to Webrender via RabbitMQ
har-daemon:
  build: ../webrender-har-daemon
  environment:
    - "AMQP_URL=amqp://guest:guest@rabbitmq:5672/%2f"
  links:
    - rabbitmq
    - webrender
  volumes_from:
    - dvc:rw

# HAR Daemon that connects Heritrix to Webrender via RabbitMQ
shepherd:
  build: ../shepherd
  environment:
    - "AMQP_URL=amqp://guest:guest@rabbitmq:5672/%2f"
    - "QUEUE_NAME=crawl-log-feed"
    - "LOG_FILE=logtocdx.log"
    - "DUMMY_RUN="
  links:
    - rabbitmq
    - webrender
  volumes_from:
    - dvc:rw

# Monitrix, built on ELK by extending Logstash to support Heritrix logs.
monitrix:
  build: ../monitrix
  ports:
    - "5601:5601"
    - "9200:9200"
    - "5000:5000"
    - "5044:5044"

## W3ACT (build in place and run)
#w3act:
#  build: ../w3act
#  volumes:
#    - ../w3act/w3act/target/universal/stage:/w3act
#  ports:
#    - "9000:9000"#

## For W3ACT data
#postgres:
#  image: postgres:9.4
#  environment:
#    - "POSTGRES_PASSWORD=pgpwd"#

## Solr, for CDX too?
## See https://hub.docker.com/_/solr/
#solr:
#  image: solr:5.3
#  command: "bash -c '/opt/solr/bin/solr start -f -z $$ZK_PORT_2181_TCP_ADDR:$$ZK_PORT_2181_TCP_PORT'"
#  ports:
#    - "8983:8983"
#  links: 
#    - zookeeper:zk#

## For scaling Solr
#zookeeper:
#  image: wurstmeister/zookeeper
#  ports: 
#    - "2181"

# tinycdxserver
cdxserver:
  build: ../tinycdxserver
  ports:
    - "9090:8080"
# I don't think this works on dev systems - should be fine in live.
#  volumes:
#    - ./cdx:/data


# OpenWayback, based loosely on UNB Libraries Dockerfile
openwayback:
  build: ../openwayback
  ports:
    - "8080:8080"
    - "8090:8090"
  environment:
    - "WAYBACK_BASEDIR=/data"
    - "WAYBACK_URL_HOST=192.168.99.100"
    - "WAYBACK_URL_PREFIX=http://192.168.99.100:8080"
    - "CDX_INDEX_SERVER=http://cdxserver:8080/fc"
  links:
    - cdxserver
  volumes_from:
    - dvc:ro
